<?php    namespace Wptt;    \CModule::IncludeModule('iblock');    \CModule::IncludeModule('highloadblock');    class Settings {        /**         * Получает ID инфоблока настроек         * @return false|mixed         */        static public function getIblockID () {            $result = false;            $res = \CIBlock::GetList(                Array(),                Array(                    'TYPE'=>'serviceInfo',                    'SITE_ID'=>SITE_ID,                    'ACTIVE'=>'Y',                    "CNT_ACTIVE"=>"Y",                    "CODE"=>'settings'                ), true            );            while($ar_res = $res->Fetch())            {                $result = $ar_res['ID'];            }            return $result;        }        /**         * Получает элемент настроек         *         * @return false|mixed         */        static public function getElement(){            $result = false;            if ($iblockId = self::getIblockID()) {                $arSelect = Array("ID", "IBLOCK_ID", "NAME", "DATE_ACTIVE_FROM","PROPERTY_*");                $arFilter = Array("IBLOCK_ID"=> $iblockId, "ACTIVE_DATE"=>"Y", "ACTIVE"=>"Y");                $res = \CIBlockElement::GetList(Array(), $arFilter, false, Array("nPageSize"=>1), $arSelect);                while($ob = $res->GetNextElement()){                    $arFields = $ob->GetFields();                    $arProps = $ob->GetProperties();                    $result = $arFields;                    $result['PROPERTIES'] = $arProps;                }            }            return $result;        }        /**         * Преобразует телефон для ссылки         *         * @param $phone         * @param bool $whatsUp         *         * @return string|string[]         */        static public function transformPhone($phone, $whatsUp = false){            $extract = ['(',')',' ', '-'];            if ($whatsUp) {                $extract[] = '+';            }             return str_replace($extract, '', $phone);        }        /**         * Преобразует текст в верстку         * @param $text         *         * @return string         */        static public function transformText($text): string        {            return htmlspecialchars_decode($text);        }        /**         * Показывает настройку по символьному коду         *         * @param $code         * @param false $type         * @param bool $whatsUp         *         * @return false|mixed|string|string[]         */        static public function showSetting($code, $type = false, $whatsUp = false){            $result = false;            if ($arrElement = self::getElement()) {                switch ($type) {                    case 'PHONE':                        $result = self::transformPhone($arrElement['PROPERTIES'][$code]['VALUE'], $whatsUp);                        break;                    case 'TEXT':                        $result = self::transformText($arrElement['PROPERTIES'][$code]['VALUE']);                        break;                    default:                        $result = $arrElement['PROPERTIES'][$code]['VALUE'];                        break;                }            }            return $result;        }    }